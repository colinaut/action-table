{"version":3,"file":"main.js","sources":["../src/action-table-filter.ts"],"sourcesContent":["export class ActionTableFilterMenu extends HTMLElement {\n\tprivate shadow: ShadowRoot;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.shadow = this.attachShadow({ mode: \"open\" });\n\t}\n\n\t// TODO: Add exact attribute that switches the filter to be exact match rather than includes\n\n\tstatic get observedAttributes(): string[] {\n\t\treturn [\"col\", \"options\"];\n\t}\n\n\tget col(): string {\n\t\treturn this.getAttribute(\"col\")?.trim().toLowerCase() || \"\";\n\t}\n\n\tget options(): string {\n\t\treturn this.getAttribute(\"options\") || \"\";\n\t}\n\n\tprivate addEventListeners(): void {\n\t\t// Add event listener that detects changes in the select element\n\t\tthis.shadow.addEventListener(\"change\", (event) => {\n\t\t\tconst el = event.target as HTMLSelectElement;\n\t\t\tif (el.tagName === \"SELECT\") {\n\t\t\t\tconst col = this.col;\n\t\t\t\tif (col) {\n\t\t\t\t\tconst value = el.value;\n\t\t\t\t\tconst detail = { col, value };\n\t\t\t\t\tthis.dispatchEvent(new CustomEvent(\"action-table-filter\", { detail, bubbles: true }));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic resetFilter(options = { dispatch: true }) {\n\t\t// console.log(`reset filter ${this.col}`);\n\t\tconst select = this.shadowRoot?.querySelector(\"select\");\n\t\tif (select) {\n\t\t\tselect.value = \"\";\n\t\t}\n\t\tif (options.dispatch) {\n\t\t\tconst detail = { col: this.col, value: \"\" };\n\t\t\tthis.dispatchEvent(new CustomEvent(\"action-table-filter\", { detail, bubbles: true }));\n\t\t}\n\t}\n\n\tpublic connectedCallback(): void {\n\t\tthis.render();\n\n\t\tthis.addEventListeners();\n\t}\n\n\tprivate render(): void {\n\t\tconst css = `<style>\n        label {\n            display: inline-block;\n            margin-inline-end: 0.5em;\n        }\n        </style>`;\n\t\tconst html = `<label part=\"label\"><slot>Sort by</slot></label><select part=\"select\" name=\"filter-${this.col}\" data-col=\"${\n\t\t\tthis.col\n\t\t}\"><option value=\"\">All</option>${this.options.split(\",\").map((option) => `<option value=\"${option}\">${option}</option>`)}</select>`;\n\n\t\tthis.shadow.innerHTML = `${css}${html}`;\n\t}\n}\n\nexport class ActionTableFilterReset extends HTMLElement {\n\tprivate shadow: ShadowRoot;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.shadow = this.attachShadow({ mode: \"open\" });\n\t}\n\n\tpublic connectedCallback(): void {\n\t\tthis.render();\n\t\tthis.addEventListeners();\n\t}\n\n\tprivate render(): void {\n\t\tconst html = `<button part=\"reset-button\"><slot>Reset Filters</slot></button>`;\n\n\t\tthis.shadow.innerHTML = `${html}`;\n\t}\n\n\tprivate addEventListeners(): void {\n\t\t// Add event listener that detects changes in the select element\n\t\tthis.shadow.addEventListener(\"click\", () => {\n\t\t\tthis.dispatchEvent(new CustomEvent(\"action-table-filter-reset\", { bubbles: true }));\n\t\t});\n\t}\n}\n\nexport class ActionTableFilterSwitch extends HTMLElement {\n\tprivate shadow: ShadowRoot;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.shadow = this.attachShadow({ mode: \"open\" });\n\t}\n\n\tstatic get observedAttributes(): string[] {\n\t\treturn [\"col\", \"filter\"];\n\t}\n\n\tget col(): string {\n\t\treturn this.getAttribute(\"col\")?.trim().toLowerCase() || \"\";\n\t}\n\n\tget filter(): string {\n\t\treturn this.getAttribute(\"filter\")?.trim().toLowerCase() || \"\";\n\t}\n\n\tpublic connectedCallback(): void {\n\t\tthis.render();\n\t\tthis.addEventListeners();\n\t}\n\n\tprivate render(): void {\n\t\tconst css = `<style>\n        :host {\n            --action-table-filter-switch-focus dodgerblue;\n            --action-table-filter-switch-unchecked: lightgray;\n            --action-table-filter-switch-checked: green;\n        }\n        input {\n            appearance: none;\n            position: relative;\n            display: inline-block;\n            background: var(--action-table-filter-switch-unchecked);\n            cursor: pointer;\n            height: 1.4em;\n            width: 2.75em;\n            vertical-align: middle;\n            border-radius: 2em;\n            box-shadow: 0px 1px 3px #0003 inset;\n            transition: 0.25s linear background;\n          }\n          input::before {\n            content: \"\";\n            display: block;\n            width: 1em;\n            height: 1em;\n            background: #fff;\n            border-radius: 1em;\n            position: absolute;\n            top: 0.2em;\n            left: 0.2em;\n            box-shadow: 0px 1px 3px #0003;\n            transition: 0.25s linear transform;\n            transform: translateX(0rem);\n          }\n          :checked {\n            background: var(--action-table-filter-switch-checked);\n          }\n          :checked::before {\n            transform: translateX(1rem);\n          }\n          input:focus {\n            outline: transparent;\n          }\n          input:focus-visible {\n            outline: 2px solid var(--action-table-filter-switch-focus);\n            outline-offset: 2px;\n          }\n          </style>`;\n\t\tconst html = `<label>\n        <input type=\"checkbox\" />\n        <slot>Show Only ${this.filter} for ${this.col}</slot>\n      </label>`;\n\n\t\tthis.shadow.innerHTML = `${css}${html}`;\n\t}\n\n\tprivate addEventListeners(): void {\n\t\t// Add event listener that detects changes in the select element\n\t\tthis.shadow.addEventListener(\"click\", (event) => {\n\t\t\tconst target = event.target as HTMLInputElement;\n\t\t\tconst checked = target.checked;\n\t\t\tlet detail = { col: this.col, value: \"\" };\n\t\t\tif (checked) {\n\t\t\t\tdetail = { col: this.col, value: this.filter };\n\t\t\t}\n\t\t\tthis.dispatchEvent(new CustomEvent(\"action-table-filter\", { detail, bubbles: true }));\n\t\t});\n\t}\n\n\tpublic resetFilter(options = { dispatch: true }) {\n\t\t// set the checkbox to false\n\n\t\tconst input = this.shadow.querySelector(\"input\");\n\t\tif (input) {\n\t\t\tinput.checked = false;\n\t\t}\n\t\tif (options.dispatch) {\n\t\t\tconst detail = { col: this.col, value: \"\" };\n\t\t\tthis.dispatchEvent(new CustomEvent(\"action-table-filter\", { detail, bubbles: true }));\n\t\t}\n\t}\n}\n\ncustomElements.define(\"action-table-filter-menu\", ActionTableFilterMenu);\ncustomElements.define(\"action-table-filter-switch\", ActionTableFilterSwitch);\ncustomElements.define(\"action-table-filter-reset\", ActionTableFilterReset);\n"],"names":["ActionTableFilterMenu","__publicField","_a","event","el","col","value","detail","options","select","css","html","option","ActionTableFilterReset","ActionTableFilterSwitch","checked","input"],"mappings":"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"}