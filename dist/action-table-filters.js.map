{"version":3,"file":"action-table-filters.js","sources":["../src/action-table-filter-menu.ts","../src/action-table-filter-switch.ts","../src/action-table-filters.ts"],"sourcesContent":["export class ActionTableFilterMenu extends HTMLElement {\n\t// private shadow: ShadowRoot;\n\n\tconstructor() {\n\t\tsuper();\n\t\t// this.shadow = this.attachShadow({ mode: \"open\" });\n\t}\n\n\t// TODO: Add exact attribute that switches the filter to be exact match rather than includes\n\n\tstatic get observedAttributes(): string[] {\n\t\treturn [\"col\", \"options\"];\n\t}\n\n\tget col(): string {\n\t\treturn this.getAttribute(\"col\")?.trim().toLowerCase() || \"\";\n\t}\n\n\tget options(): string {\n\t\treturn this.getAttribute(\"options\") || \"\";\n\t}\n\n\tset options(value: string) {\n\t\tthis.setAttribute(\"options\", value);\n\t}\n\n\tprivate addEventListeners(): void {\n\t\t// Add event listener that detects changes in the select element\n\t\tthis.addEventListener(\"change\", (event) => {\n\t\t\tconst el = event.target as HTMLSelectElement;\n\t\t\tif (el.tagName === \"SELECT\") {\n\t\t\t\tconst col = this.col;\n\t\t\t\tif (col) {\n\t\t\t\t\tconst value = el.value;\n\t\t\t\t\tconst detail = { col, value };\n\t\t\t\t\tthis.dispatchEvent(new CustomEvent(\"action-table-filter\", { detail, bubbles: true }));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic resetFilter() {\n\t\tconst select = this.shadowRoot?.querySelector(\"select\");\n\t\tif (select) {\n\t\t\tselect.value = \"\";\n\t\t}\n\t}\n\n\tpublic findOptions(col: string): void {\n\t\tcol = col.toLowerCase();\n\t\tconst ths = this.closest(\"action-table\")?.querySelectorAll(\"table thead th\") as NodeListOf<HTMLTableCellElement>;\n\t\tconst col_index = Array.from(ths).findIndex((th) => th.dataset.col?.toLowerCase() === col || th.innerText.toLowerCase() === col);\n\t\tif (col_index === -1) {\n\t\t\treturn;\n\t\t}\n\t\tconst cells = this.closest(\"action-table\")?.querySelectorAll(`table tbody td:nth-child(${col_index + 1})`) as NodeListOf<HTMLTableCellElement>;\n\t\tconst subItems = this.closest(\"action-table\")?.querySelectorAll(`table tbody td:nth-child(${col_index + 1}) > *`) as NodeListOf<HTMLElement>;\n\t\tlet options: string[] = [];\n\t\tif (subItems && subItems.length > 0) {\n\t\t\toptions = Array.from(subItems).map((item) => item.innerText);\n\t\t} else {\n\t\t\toptions = Array.from(cells).map((cell) => cell.innerText);\n\t\t}\n\t\tthis.options = Array.from(new Set(options)).join(\",\");\n\t}\n\n\tpublic connectedCallback(): void {\n\t\tif (!this.options) this.findOptions(this.col);\n\t\tthis.render();\n\t\tthis.addEventListeners();\n\t}\n\n\tprivate render(): void {\n\t\tconst html = `<label part=\"label\"><slot>Filter by ${this.col}</slot></label><select part=\"select\" name=\"filter-${this.col}\" data-col=\"${\n\t\t\tthis.col\n\t\t}\"><option value=\"\">All</option>${this.options.split(\",\").map((option) => `<option value=\"${option}\">${option}</option>`)}</select>`;\n\n\t\tthis.innerHTML = `${html}`;\n\t}\n}\n\ncustomElements.define(\"action-table-filter-menu\", ActionTableFilterMenu);\n","export class ActionTableFilterSwitch extends HTMLElement {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic get observedAttributes(): string[] {\n\t\treturn [\"col\", \"filter\", \"label\"];\n\t}\n\n\tget col(): string {\n\t\treturn this.getAttribute(\"col\") || \"\";\n\t}\n\n\tget filter(): string {\n\t\treturn this.getAttribute(\"filter\") || \"checked\";\n\t}\n\n\tget label(): string {\n\t\treturn this.getAttribute(\"label\") || this.col;\n\t}\n\n\tpublic connectedCallback(): void {\n\t\tthis.render();\n\t\tthis.addEventListeners();\n\t}\n\n\tprivate render(): void {\n\t\tconst html = `<label>\n        <input type=\"checkbox\" />\n        <span>${this.label}</span>\n      </label>`;\n\n\t\tthis.innerHTML = `${html}`;\n\t}\n\n\tprivate addEventListeners(): void {\n\t\t// Add event listener that detects changes in the select element\n\t\tthis.addEventListener(\"click\", (event) => {\n\t\t\tconst target = event.target as HTMLInputElement;\n\t\t\tlet value = target.checked ? this.filter : \"\";\n\t\t\tlet detail = { col: this.col, value };\n\t\t\tthis.dispatchEvent(new CustomEvent(\"action-table-filter\", { detail, bubbles: true }));\n\t\t});\n\t}\n\n\tpublic resetFilter() {\n\t\tconst input = this.querySelector(\"input\");\n\t\tif (input) {\n\t\t\tinput.checked = false;\n\t\t}\n\t}\n}\n\ncustomElements.define(\"action-table-filter-switch\", ActionTableFilterSwitch);\n","export class ActionTableFilters extends HTMLElement {\n\tconstructor() {\n\t\tsuper();\n\t}\n\tprivate filters!: NodeListOf<HTMLSelectElement | HTMLInputElement>;\n\tpublic connectedCallback(): void {\n\t\tthis.filters = this.querySelectorAll(\"select, input[type=checkbox], input[type=radio]\") as NodeListOf<HTMLSelectElement | HTMLInputElement>;\n\t\t// console.log(\"ðŸš€ ~ file: action-table-filters.ts:9 ~ ActionTableFilters ~ connectedCallback ~ this.filters:\", this.filters);\n\t\tthis.addEventListeners();\n\t}\n\n\tpublic resetAllFilters(): void {\n\t\tthis.filters.forEach((filter) => {\n\t\t\tif (filter.type === \"checkbox\") {\n\t\t\t\tconst input = filter as HTMLInputElement;\n\t\t\t\tinput.checked = false;\n\t\t\t}\n\t\t\tif (filter.type === \"radio\") {\n\t\t\t\tconst input = filter as HTMLInputElement;\n\t\t\t\tif ((input.value = \"\")) {\n\t\t\t\t\tinput.checked = true;\n\t\t\t\t} else {\n\t\t\t\t\tinput.checked = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (filter.tagName.toLowerCase() === \"select\") {\n\t\t\t\tfilter.value = \"\";\n\t\t\t}\n\t\t});\n\t\t// find all action-table-filter elements and call resetFilter\n\t\tinterface ActionTableFilter extends HTMLElement {\n\t\t\tresetFilter(options?: { dispatch: boolean }): void;\n\t\t}\n\t\tconst filterMenus = this.querySelectorAll(\"action-table-filter-menu, action-table-filter-switch\") as NodeListOf<ActionTableFilter>;\n\n\t\tfilterMenus?.forEach((el) => {\n\t\t\tel.resetFilter();\n\t\t});\n\t}\n\n\tprivate addEventListeners(): void {\n\t\tthis.filters?.forEach((el) => {\n\t\t\tif (el.type === \"checkbox\") {\n\t\t\t\tconst input = el as HTMLInputElement;\n\t\t\t\tinput.addEventListener(\"change\", () => {\n\t\t\t\t\tconst checkboxValues = Array.from(this.filters)\n\t\t\t\t\t\t.filter((filter) => {\n\t\t\t\t\t\t\tif (filter.type === \"checkbox\") {\n\t\t\t\t\t\t\t\tconst checkbox = filter as HTMLInputElement;\n\t\t\t\t\t\t\t\treturn checkbox.type === \"checkbox\" && checkbox.name === input.name && checkbox.checked;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.map((checkbox) => checkbox.value);\n\n\t\t\t\t\tlet detail = { col: input.name, value: checkboxValues };\n\n\t\t\t\t\tthis.dispatchEvent(new CustomEvent(\"action-table-filter\", { detail, bubbles: true }));\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (el.type === \"radio\") {\n\t\t\t\tel.addEventListener(\"change\", () => {\n\t\t\t\t\tconst detail = { col: el.name, value: el.value };\n\t\t\t\t\tthis.dispatchEvent(new CustomEvent(\"action-table-filter\", { detail, bubbles: true }));\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (el.tagName.toLowerCase() === \"select\") {\n\t\t\t\tel.addEventListener(\"change\", () => {\n\t\t\t\t\tconst detail = { col: el.name, value: el.value };\n\t\t\t\t\tthis.dispatchEvent(new CustomEvent(\"action-table-filter\", { detail, bubbles: true }));\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tconst resetButton = this.querySelector(\"button[type=reset]\") as HTMLButtonElement;\n\t\tresetButton?.addEventListener(\"click\", () => {\n\t\t\tthis.dispatchEvent(new CustomEvent(\"action-table-filter-reset\", { bubbles: true }));\n\t\t});\n\n\t\t// add listener for action-table-filter-reset event\n\t\tthis.addEventListener(\"action-table-filter-reset\", () => {\n\t\t\tthis.resetAllFilters();\n\t\t});\n\t}\n}\n\ncustomElements.define(\"action-table-filters\", ActionTableFilters);\nimport \"./action-table-filter-menu\";\nimport \"./action-table-filter-switch\";\n"],"names":["ActionTableFilterMenu","_a","value","event","el","col","detail","select","_b","_c","ths","col_index","th","cells","subItems","options","item","cell","html","option","ActionTableFilterSwitch","input","ActionTableFilters","__publicField","filter","filterMenus","checkboxValues","checkbox","resetButton"],"mappings":"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"}