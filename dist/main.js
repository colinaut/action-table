var o=Object.defineProperty;var r=(n,i,e)=>i in n?o(n,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[i]=e;var l=(n,i,e)=>(r(n,typeof i!="symbol"?i+"":i,e),e);import"./action-table.js";import"./action-table-filter.js";class u extends HTMLElement{constructor(){super();l(this,"filters")}connectedCallback(){this.filters=this.querySelectorAll("select, input[type=checkbox], input[type=radio]"),this.addEventListeners()}resetAllFilters(){this.filters.forEach(e=>{if(e.type==="checkbox"){const a=e;a.checked=!1}if(e.type==="radio"){const a=e;(a.value="")?a.checked=!0:a.checked=!1}e.tagName.toLowerCase()==="select"&&(e.value="")})}addEventListeners(){var a;(a=this.filters)==null||a.forEach(t=>{if(t.type==="checkbox"){const s=t;s.addEventListener("change",()=>{let c={col:s.name,value:s.value};s.checked||(c={col:s.name,value:""}),this.dispatchEvent(new CustomEvent("action-table-filter",{detail:c,bubbles:!0}))})}t.type==="radio"&&t.addEventListener("change",()=>{const s={col:t.name,value:t.value};this.dispatchEvent(new CustomEvent("action-table-filter",{detail:s,bubbles:!0}))}),t.tagName.toLowerCase()==="select"&&t.addEventListener("change",()=>{const s={col:t.name,value:t.value};this.dispatchEvent(new CustomEvent("action-table-filter",{detail:s,bubbles:!0}))})});const e=this.querySelector("button[type=reset]");e==null||e.addEventListener("click",()=>{this.dispatchEvent(new CustomEvent("action-table-filter-reset",{bubbles:!0}))}),this.addEventListener("action-table-filter-reset",()=>{this.resetAllFilters()})}}customElements.define("action-table-filters",u);
//# sourceMappingURL=main.js.map
