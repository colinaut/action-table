{"version":3,"file":"action-table.js","sources":["../src/action-table.ts"],"sourcesContent":["export class ActionTable extends HTMLElement {\n\tprivate shadow: ShadowRoot;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.shadow = this.attachShadow({ mode: \"open\" });\n\t}\n\n\t// TODO: review if I really need all of these variables\n\tprivate table!: HTMLTableElement;\n\tprivate tbody!: HTMLTableSectionElement;\n\tprivate ths!: NodeListOf<HTMLTableCellElement>;\n\tprivate cols: { name: string; index: number; filter?: string }[] = [];\n\tprivate rows!: NodeListOf<HTMLTableRowElement>;\n\tprivate rowsArray!: Array<HTMLTableRowElement>;\n\tprivate rowsArrayFiltered!: Array<HTMLTableRowElement>;\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                                 Attributes                                 */\n\t/* -------------------------------------------------------------------------- */\n\n\tstatic get observedAttributes(): string[] {\n\t\treturn [\"sort\", \"direction\"];\n\t}\n\n\tget sort(): string {\n\t\treturn this.getAttribute(\"sort\") || \"\";\n\t}\n\tset sort(value) {\n\t\tif (typeof value === \"string\") this.setAttribute(\"sort\", value);\n\t}\n\tget direction(): string {\n\t\treturn this.getAttribute(\"direction\") || \"ascending\";\n\t}\n\tset direction(value) {\n\t\tif (typeof value === \"string\") this.setAttribute(\"direction\", value);\n\t}\n\n\tpublic connectedCallback(): void {\n\t\tthis.render();\n\n\t\t/* ------------------------ Grab elements from slots ------------------------ */\n\t\tconst slot = this.shadowRoot?.querySelector(\"slot\");\n\t\tif (!slot) return;\n\t\t// Detect slot changes\n\t\t// slot.addEventListener(\"slotchange\", () => {\n\t\t// \tlet nodes = slot.assignedNodes();\n\t\t// \tconsole.log(`Element in Slot \"${slot}\" changed`, nodes);\n\t\t// });\n\t\tconst element = slot.assignedElements();\n\n\t\tthis.table = element.filter((el) => {\n\t\t\tif (el.matches(\"table\")) return el as HTMLTableElement;\n\t\t\tif (el.querySelector(\"table\")) return el.querySelector(\"table\") as HTMLTableElement;\n\t\t\treturn false;\n\t\t})[0] as HTMLTableElement;\n\t\t// console.log(\"ðŸš€ ~ file: main.ts:51 ~ ActionTable ~ this.table=element.filter ~ this.table:\", this.table);\n\n\t\tthis.tbody = this.table.querySelector(\"tbody\") as HTMLTableSectionElement;\n\n\t\t/* ----------------- Get Column Names and Indexes ----------------- */\n\t\tthis.ths = this.table.querySelectorAll(\"th\");\n\t\tif (this.ths) {\n\t\t\tthis.ths.forEach((th) => {\n\t\t\t\t// Column name is based on data-col attribute or title attribute of first child or text content of th or first child text content\n\t\t\t\tconst name = th.dataset.col || th.children[0]?.getAttribute(\"title\") || th.textContent || th.children[0]?.textContent || \"\";\n\t\t\t\tif (name) {\n\t\t\t\t\tthis.cols.push({ name: name, index: th.cellIndex });\n\t\t\t\t\tconst span = document.createElement(\"span\");\n\t\t\t\t\tspan.classList.add(\"sort-arrow\");\n\t\t\t\t\t// span.innerHTML = arrow_svg;\n\t\t\t\t\tth.append(span);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tconsole.log(\"action-table cols\", this.cols);\n\n\t\tthis.rows = this.table.querySelectorAll(\"tbody tr\");\n\t\tthis.rowsArray = Array.from(this.rows);\n\t\tthis.rowsArrayFiltered = this.rowsArray;\n\n\t\t/* ----------------- Sort Table Element if attribute is set ----------------- */\n\t\tif (this.sort) {\n\t\t\tthis.sortTable();\n\t\t}\n\n\t\tthis.addEventListeners();\n\t}\n\n\tpublic attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n\t\tconsole.log(\"changed\", name, oldValue, newValue);\n\t}\n\n\tprivate addEventListeners(): void {\n\t\tthis.shadow.addEventListener(\n\t\t\t\"click\",\n\t\t\t(event) => {\n\t\t\t\tconst el = event.target as HTMLTableCellElement;\n\t\t\t\tif (el.tagName === \"TH\") {\n\t\t\t\t\tconst name = el.dataset.col || el.children[0]?.getAttribute(\"title\") || el.textContent || \"\";\n\t\t\t\t\tif (name) {\n\t\t\t\t\t\tif (this.sort === name && this.direction === \"ascending\") {\n\t\t\t\t\t\t\tthis.direction = \"descending\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.sort = name;\n\t\t\t\t\t\t\tthis.direction = \"ascending\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.sortTable();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\n\t\t// TODO: add function to filter for numbers against a value range\n\t\t// TODO: add function to filter for dates against a date range\n\t\t// TODO: add function to filter for an array of strings so can have multiple select dropdown\n\n\t\t// Add listener for custom event \"action-table-filter\" which logs the event detail\n\t\tthis.shadow.addEventListener(\"action-table-filter\", (event) => {\n\t\t\tconst { col, value } = (<CustomEvent>event).detail;\n\t\t\tconsole.log(`Filter ${col} to ${value}`);\n\t\t\tthis.filterTable(col, value);\n\t\t});\n\t}\n\n\tprivate filterTable(col = \"\", value = \"\") {\n\t\t// Add filter to cols array\n\t\t// if value = \"\" that resets the filter for that column\n\t\tthis.cols = this.cols.map((c) => {\n\t\t\tif (c.name.toLowerCase() === col.toLowerCase()) {\n\t\t\t\tc.filter = value;\n\t\t\t}\n\t\t\treturn c;\n\t\t});\n\n\t\t// Filter based on filter value\n\t\tthis.rowsArray.forEach((row) => {\n\t\t\trow.style.display = \"\";\n\t\t\tconst cells = row.children as HTMLCollectionOf<HTMLElement>;\n\t\t\tthis.cols.forEach((col) => {\n\t\t\t\tif (col.filter) {\n\t\t\t\t\tconst content = cells[col.index].textContent?.toLowerCase() || cells[col.index].dataset.sort?.toLowerCase() || \"\";\n\t\t\t\t\tif (content.includes(col.filter.toLowerCase())) {\n\t\t\t\t\t} else {\n\t\t\t\t\t\trow.style.display = \"none\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tthis.sortTable();\n\t}\n\n\tprivate getCellSortValue(cell: HTMLTableCellElement) {\n\t\tlet cellContent: string | number = cell.dataset.sort || cell.textContent || \"\";\n\t\tcellContent = cellContent.trim().toLowerCase();\n\t\tcellContent = Number(cellContent) ? Number(cellContent) : cellContent;\n\t\treturn cellContent;\n\t}\n\n\tprivate sortTable(sort = this.sort, direction = this.direction) {\n\t\t// Get column index from column name\n\t\tconst column_index = this.cols.findIndex((c) => c.name === sort);\n\t\t// Sort\n\t\tif (column_index >= 0 && this.rowsArrayFiltered.length > 0) {\n\t\t\tconsole.log(`sort by ${sort} ${direction}`);\n\n\t\t\tthis.rowsArray.sort((r1, r2) => {\n\t\t\t\tconst c1 = r1.children[column_index] as HTMLTableCellElement;\n\t\t\t\tconst c2 = r2.children[column_index] as HTMLTableCellElement;\n\t\t\t\tlet v1 = this.getCellSortValue(c1);\n\t\t\t\tlet v2 = this.getCellSortValue(c2);\n\n\t\t\t\tif (this.direction === \"ascending\") {\n\t\t\t\t\tif (v1 < v2) return -1;\n\t\t\t\t\tif (v1 > v2) return 1;\n\t\t\t\t} else {\n\t\t\t\t\tif (v1 < v2) return 1;\n\t\t\t\t\tif (v1 > v2) return -1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t\t// Remove \"sorted\" and direction classes from all th and add for sorted column\n\t\t\tthis.ths.forEach((th) => {\n\t\t\t\tth.classList.remove(\"sort-ascending\");\n\t\t\t\tth.classList.remove(\"sort-descending\");\n\t\t\t\tif (th.textContent === sort) {\n\t\t\t\t\tth.classList.add(`sort-${direction}`);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.rowsArray.forEach((row) => this.tbody.appendChild(row));\n\t\t}\n\t}\n\n\tprivate render(): void {\n\t\tconsole.log(\"render action-table\");\n\n\t\tconst html = `<slot></slot>`;\n\t\tconst css = `<style></style>`;\n\n\t\tthis.shadow.innerHTML = `${css}${html}`;\n\t}\n}\n\ncustomElements.define(\"action-table\", ActionTable);\n"],"names":["ActionTable","__publicField","value","_a","slot","element","el","th","_b","name","span","oldValue","newValue","event","col","c","row","cells","cell","cellContent","sort","direction","column_index","r1","r2","c1","c2","v1","v2","html","css"],"mappings":"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"}