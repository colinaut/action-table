var b=Object.defineProperty;var p=(o,i,e)=>i in o?b(o,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[i]=e;var u=(o,i,e)=>(p(o,typeof i!="symbol"?i+"":i,e),e);class d extends HTMLElement{constructor(){super()}static get observedAttributes(){return["name","options","label","type","exclusive","multiple"]}get name(){return this.getAttribute("name")||""}get options(){var i;return((i=this.getAttribute("options"))==null?void 0:i.split(","))||[]}set options(i){this.setAttribute("options",i.join(","))}get label(){return this.getAttribute("label")||this.name}get type(){return this.getAttribute("type")||"select"}get multiple(){return this.hasAttribute("multiple")?"multiple":""}findOptions(i){i=i.toLowerCase();const e=this.closest("action-table"),s=e.cols,t=e.tbody,l=s.indexOf(i);if(l===-1)return;const a=`td:nth-child(${l+1})`,r=t.querySelectorAll(a);let n=[];Array.from(r).forEach(c=>{if(c.dataset.filter)n.push(c.dataset.filter);else{const h=c.querySelectorAll("span, ul > li");if((h==null?void 0:h.length)>0){const m=Array.from(h).map(f=>f.innerText);n=n.concat(m)}else n.push(c.innerText)}}),n=Array.from(new Set(n)),this.options=n.sort(e.alphaNumSort)}connectedCallback(){this.options.length<1&&this.findOptions(this.name),this.render()}render(){if(this.options.length<1)return;const i=this.name.toLowerCase(),e=this.type==="select"?`<label for="filter-${i}">${this.label}</label>`:`<span class="filter-label">${this.label}</span>`;let s="",t="";this.type==="select"&&(s=`<select id="filter-${i}" name="${i}" ${this.multiple}><option value="">All</option>`,t="</select>"),this.type==="radio"&&(s=`<label><input name="${i}" type="radio" value="" checked>All</label>`);const l=`${e}${s}${this.options.map(a=>this.type==="select"?`<option value="${a}">${a}</option>`:this.type==="radio"||this.type==="checkbox"?`<label><input type="${this.type}" name="${i}" value="${a}" />${a}</label>`:"").join("")}${t}`;this.innerHTML=`${l}`}}customElements.define("action-table-filter-menu",d);class g extends HTMLElement{constructor(){super()}static get observedAttributes(){return["name","label","value"]}get name(){return this.getAttribute("name")||""}get label(){return this.getAttribute("label")||this.name}get value(){return this.getAttribute("value")||"on"}connectedCallback(){this.render()}render(){const i=`<label>
        <input type="checkbox" name="${this.name.toLowerCase()}" value="${this.value}" />
        <span>${this.label}</span>
      </label>`;this.innerHTML=`${i}`}}customElements.define("action-table-filter-switch",g);class y extends HTMLElement{constructor(){super();u(this,"filterElements")}connectedCallback(){this.init()}async init(){await this.checkForActionTableFilterElements(),this.filterElements=this.querySelectorAll("select, input[type=checkbox], input[type=radio], input[type=search]"),this.addEventListeners()}toggleHighlight(e){e.value?e.classList.add("selected"):e.classList.remove("selected")}addEventListeners(){const e=this.closest("action-table");this.filterElements.forEach(t=>{const l=!!t.closest("[exclusive]");t.tagName.toLowerCase()==="select"&&t.addEventListener("change",()=>{this.toggleHighlight(t);const r=t,n=Array.from(r.selectedOptions).map(c=>c.value);e.filterTable(t.name,n,l)}),t.type==="checkbox"&&t.addEventListener("change",()=>{const r=Array.from(this.filterElements).filter(n=>(n=n,n.type==="checkbox"&&n.name===t.name?n.checked:!1)).map(n=>n.value);e.filterTable(t.name,r,l)}),t.type==="radio"&&t.addEventListener("change",()=>{e.filterTable(t.name,[t.value])});function a(r,n=300){let c;return(...h)=>{clearTimeout(c),c=setTimeout(()=>{r(...h)},n)}}if(t.type==="search"){const r=t.dataset.event||"input";t.addEventListener(r,()=>{a(()=>e.filterTable(t.name,[t.value]))(),e.filterTable(t.name,[t.value])})}});const s=this.querySelector("button[type=reset]");s==null||s.addEventListener("click",()=>{this.resetAllFilterElements(),e.resetFilters()})}async checkForActionTableFilterElements(){const e=this.querySelectorAll("action-table-filter-menu, action-table-filter-switch");return Array.from(e).every(t=>customElements.get(t.tagName.toLowerCase()))?!0:e&&e.length>0?(await Promise.all([customElements.whenDefined("action-table-filter-menu"),customElements.whenDefined("action-table-filter-switch")]),!0):!1}resetAllFilterElements(){this.filterElements.forEach(e=>{if(e.type==="checkbox"||e.type==="radio"){const s=e;s.value===""?s.checked=!0:s.checked=!1}(e.tagName.toLowerCase()==="select"||e.type==="search")&&(e.value="",this.toggleHighlight(e))})}async setFilterElements(e){await this.checkForActionTableFilterElements(),Object.keys(e).length>0?Object.keys(e).forEach(s=>{e[s].values&&this.setFilterElement(s,e[s].values)}):this.resetAllFilterElements()}setFilterElement(e,s){var t;(t=this.filterElements)==null||t.forEach(l=>{if(l.name===e){if(l.type==="checkbox"){const a=l;s.includes(a.value)&&(a.checked=!0)}if(l.tagName.toLowerCase()==="select"&&(l.value=s[0]||"",this.toggleHighlight(l)),l.type==="radio"){const a=l;a.value===s[0]&&(a.checked=!0)}l.type==="search"&&(l.value=s[0]||"",this.toggleHighlight(l))}})}}customElements.define("action-table-filters",y);
//# sourceMappingURL=action-table-filters.js.map
