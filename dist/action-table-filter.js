var c=Object.defineProperty;var r=(s,e,t)=>e in s?c(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var n=(s,e,t)=>(r(s,typeof e!="symbol"?e+"":e,t),t);class h extends HTMLElement{constructor(){super();n(this,"shadow");this.shadow=this.attachShadow({mode:"open"})}static get observedAttributes(){return["col","options","label","switch"]}get col(){return this.getAttribute("col")||""}get options(){return this.getAttribute("options")||""}get label(){return this.getAttribute("label")||""}get switch(){return this.getAttribute("switch")||""}addEventListeners(){this.shadow.addEventListener("change",t=>{const l=t.target;if(l.tagName==="SELECT"){const i=this.col;if(i){const o=l.value,a={col:i,value:o};this.dispatchEvent(new CustomEvent("action-table-filter",{detail:a,bubbles:!0}))}}})}connectedCallback(){this.render(),this.addEventListeners()}render(){const t=`${this.label?`<label>${this.label}</label> `:""}<select data-col="${this.col}"><option value="">All</option>${this.options.split(",").map(i=>`<option value="${i}">${i}</option>`)}</select>`,l="<style></style>";this.shadow.innerHTML=`${l}${t}`}}customElements.define("action-table-filter",h);
//# sourceMappingURL=action-table-filter.js.map
