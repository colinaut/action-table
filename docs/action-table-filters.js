var b=Object.defineProperty;var m=(u,a,e)=>a in u?b(u,a,{enumerable:!0,configurable:!0,writable:!0,value:e}):u[a]=e;var p=(u,a,e)=>(m(u,typeof a!="symbol"?a+"":a,e),e);class E extends HTMLElement{constructor(){super();p(this,"options",[])}findOptions(e){e=e.toLowerCase();const t=this.closest("action-table"),i=t.cols,s=t.tbody,o=i.indexOf(e);if(o===-1)return;const r=`td:nth-child(${o+1})`,h=s.querySelectorAll(r);let n=[];Array.from(h).forEach(c=>{if(c.dataset.filter)n.push(c.dataset.filter);else{const l=c.querySelectorAll("span, ul > li");if((l==null?void 0:l.length)>0){const d=Array.from(l).map(f=>f.innerText);n=n.concat(d)}else n.push(c.innerText)}}),n=Array.from(new Set(n)),this.options=n.sort((c,l)=>c.localeCompare(l,void 0,{numeric:!0}))}connectedCallback(){var t;const e=this.getAttribute("name");e&&(this.hasAttribute("options")?this.options=((t=this.getAttribute("options"))==null?void 0:t.split(","))||[]:this.findOptions(e),this.render(e))}render(e){if(this.options.length<1)return;const t=this.getAttribute("type")||"select",i=this.getAttribute("label")||e,s=this.hasAttribute("multiple")?"multiple":"",o=this.getAttribute("all")||"All";let r="",h="";const n=t==="select"?`<label for="filter-${e}">${i}</label>`:`<span class="filter-label">${i}</span>`;t==="select"&&(r=`<select id="filter-${e}" name="${e}" ${s}><option value="">${o}</option>`,h="</select>"),t==="radio"&&(r=`<label><input name="${e}" type="radio" value="" checked>${o}</label>`);const c=`${n}${r}${this.options.map(l=>t==="select"?`<option value="${l}">${l}</option>`:t==="radio"||t==="checkbox"?`<label><input type="${t}" name="${e}" value="${l}" />${l}</label>`:"").join("")}${h}`;this.innerHTML=`${c}`}}customElements.define("action-table-filter-menu",E);class v extends HTMLElement{constructor(){super(),this.render()}connectedCallback(){this.render()}render(){const a=this.getAttribute("name");if(!a)return;const e=this.getAttribute("label")||a,t=this.getAttribute("value")||"on",i=`<label>
        <input type="checkbox" name="${a.toLowerCase()}" value="${t}" />
        <span>${e}</span>
      </label>`;this.innerHTML=`${i}`}}customElements.define("action-table-filter-switch",v);class g extends HTMLElement{constructor(){super();p(this,"actionTable",this.closest("action-table"));this.addEventListeners()}connectedCallback(){const e=this.actionTable.filters;Object.keys(e).length>0&&this.setFilterElements(e)}toggleHighlight(e){e.value?e.classList.add("selected"):e.classList.remove("selected")}addEventListeners(){this.addEventListener("change",i=>{const s=i.target;if(s instanceof HTMLSelectElement||s instanceof HTMLInputElement){const o=s.hasAttribute("exclusive")||!!s.closest("[exclusive]"),r=s.hasAttribute("regex")||!!s.closest("[regex]"),h=s.name.toLowerCase();if(s instanceof HTMLSelectElement){this.toggleHighlight(s);const n=Array.from(s.selectedOptions).map(c=>c.value);this.dispatch({[h]:{values:n,exclusive:o,regex:r}})}if(s instanceof HTMLInputElement){if(s.type==="checkbox"){const n=this.querySelectorAll("input[type=checkbox][name="+s.name+"]"),c=Array.from(n).filter(l=>l.checked).map(l=>l.value);this.dispatch({[h]:{values:c,exclusive:o,regex:r}})}s.type==="radio"&&this.dispatch({[h]:{values:[s.value],exclusive:o,regex:r}})}}}),this.querySelectorAll("input[type='search']").forEach(i=>{function s(r,h=300){let n;return(...c)=>{clearTimeout(n),n=setTimeout(()=>{r(...c)},h)}}const o=i.dataset.event||"input";i.addEventListener(o,()=>{s(()=>this.dispatch({[i.name]:{values:[i.value]}}))(),this.dispatch({[i.name]:{values:[i.value]}})})});const t=this.querySelector("button[type=reset]");t==null||t.addEventListener("click",()=>{this.resetAllFilterElements(),this.dispatch()}),this.actionTable.addEventListener("action-table-filters-reset",()=>{this.resetAllFilterElements()})}dispatch(e){this.dispatchEvent(new CustomEvent("action-table-filter",{detail:e,bubbles:!0}))}resetAllFilterElements(){this.querySelectorAll("select, input[type=checkbox], input[type=radio], input[type=search]").forEach(t=>{t instanceof HTMLInputElement&&(t.type==="checkbox"||t.type==="radio")&&(t.value===""?t.checked=!0:t.checked=!1),(t instanceof HTMLSelectElement||t instanceof HTMLInputElement&&t.type==="search")&&(t.value="",this.toggleHighlight(t))})}setFilterElements(e){Object.keys(e).length>0?Object.keys(e).forEach(t=>{e[t].values&&this.setFilterElement(t,e[t].values)}):this.resetAllFilterElements()}setFilterElement(e,t){this.querySelectorAll("select, input[type=checkbox], input[type=radio], input[type=search]").forEach(s=>{s.name.toLowerCase()===e&&(s instanceof HTMLSelectElement&&(s.value=t[0]||"",this.toggleHighlight(s)),s instanceof HTMLInputElement&&(s.type==="checkbox"&&t.includes(s.value)&&(s.checked=!0),s.type==="radio"&&s.value===t[0]&&(s.checked=!0),s.type==="search"&&(s.value=t[0]||"",this.toggleHighlight(s))))})}}customElements.define("action-table-filters",g);
//# sourceMappingURL=action-table-filters.js.map
