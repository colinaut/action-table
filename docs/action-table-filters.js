var E=Object.defineProperty;var g=(p,c,t)=>c in p?E(p,c,{enumerable:!0,configurable:!0,writable:!0,value:t}):p[c]=t;var f=(p,c,t)=>(g(p,typeof c!="symbol"?c+"":c,t),t);class y extends HTMLElement{constructor(){super();f(this,"options",[])}findOptions(t){t=t.toLowerCase();const e=this.closest("action-table"),l=e.cols,s=e.tbody,r=l.findIndex(n=>n.name===t);if(r===-1)return;const a=`td:nth-child(${r+1})`,u=s.querySelectorAll(a);let i=[];Array.from(u).forEach(n=>{if(n.dataset.filter)i.push(n.dataset.filter);else{const d=n.querySelectorAll("span, ul > li");if((d==null?void 0:d.length)>0){const b=Array.from(d).map(m=>m.innerText);i=i.concat(b)}else i.push(n.innerText)}}),i=Array.from(new Set(i));const o=l[r].order;function h(n){return o!=null&&o.includes(n)?o.indexOf(n).toString():n}i.sort((n,d)=>(n=h(n),d=h(d),e.alphaNumSort(n,d))),this.hasAttribute("descending")&&i.reverse(),this.options=i}connectedCallback(){var e;const t=this.getAttribute("name");t&&(this.hasAttribute("options")?this.options=((e=this.getAttribute("options"))==null?void 0:e.split(","))||[]:this.findOptions(t),this.render(t))}render(t){if(this.options.length<1)return;const e=this.getAttribute("type")||"select",l=this.getAttribute("label")||t,s=this.hasAttribute("multiple")?"multiple":"",r=this.getAttribute("all")||"All";let a="",u="";const i=e==="select"?`<label for="filter-${t}">${l}</label>`:`<span class="filter-label">${l}</span>`;e==="select"&&(a=`<select id="filter-${t}" name="${t}" ${s}><option value="">${r}</option>`,u="</select>"),e==="radio"&&(a=`<label><input name="${t}" type="radio" value="" checked>${r}</label>`);const o=`${i}${a}${this.options.map(h=>e==="select"?`<option value="${h}">${h}</option>`:e==="radio"||e==="checkbox"?`<label><input type="${e}" name="${t}" value="${h}" />${h}</label>`:"").join("")}${u}`;this.innerHTML=`${o}`}}customElements.define("action-table-filter-menu",y);class v extends HTMLElement{constructor(){super(),this.render()}connectedCallback(){this.render()}render(){const c=this.getAttribute("name");if(!c)return;const t=this.getAttribute("label")||c,e=this.getAttribute("value")||"on",l=`<label>
        <input type="checkbox" name="${c.toLowerCase()}" value="${e}" />
        <span>${t}</span>
      </label>`;this.innerHTML=`${l}`}}customElements.define("action-table-filter-switch",v);class A extends HTMLElement{constructor(){super();f(this,"actionTable",this.closest("action-table"));this.addEventListeners()}connectedCallback(){const t=this.actionTable.filters;Object.keys(t).length>0&&this.setFilterElements(t)}toggleHighlight(t){t.value?t.classList.add("selected"):t.classList.remove("selected")}addEventListeners(){this.addEventListener("change",l=>{const s=l.target;if(s instanceof HTMLSelectElement||s instanceof HTMLInputElement){const r=s.hasAttribute("exclusive")||!!s.closest("[exclusive]"),a=s.hasAttribute("regex")||!!s.closest("[regex]"),u=s.hasAttribute("exact")||!!s.closest("[exact]"),i=s.name.toLowerCase();if(s instanceof HTMLSelectElement){this.toggleHighlight(s);const o=Array.from(s.selectedOptions).map(h=>h.value);this.dispatch({[i]:{values:o,exclusive:r,regex:a,exact:u}})}if(s instanceof HTMLInputElement){if(s.type==="checkbox"){const o=this.querySelectorAll("input[type=checkbox][name="+s.name+"]"),h=Array.from(o).filter(n=>n.checked).map(n=>n.value);this.dispatch({[i]:{values:h,exclusive:r,regex:a,exact:u}})}s.type==="radio"&&this.dispatch({[i]:{values:[s.value],exclusive:r,regex:a,exact:u}})}}}),this.querySelectorAll("input[type='search']").forEach(l=>{function s(a,u=300){let i;return(...o)=>{clearTimeout(i),i=setTimeout(()=>{a(...o)},u)}}const r=l.dataset.event||"input";l.addEventListener(r,()=>{s(()=>this.dispatch({[l.name]:{values:[l.value]}}))(),this.dispatch({[l.name]:{values:[l.value]}})})});const e=this.querySelector("button[type=reset]");e==null||e.addEventListener("click",()=>{this.resetAllFilterElements(),this.dispatch()}),this.actionTable.addEventListener("action-table-filters-reset",()=>{this.resetAllFilterElements()})}dispatch(t){this.dispatchEvent(new CustomEvent("action-table-filter",{detail:t,bubbles:!0}))}resetAllFilterElements(){this.querySelectorAll("select, input[type=checkbox], input[type=radio], input[type=search]").forEach(e=>{e instanceof HTMLInputElement&&(e.type==="checkbox"||e.type==="radio")&&(e.value===""?e.checked=!0:e.checked=!1),(e instanceof HTMLSelectElement||e instanceof HTMLInputElement&&e.type==="search")&&(e.value="",this.toggleHighlight(e))})}setFilterElements(t){Object.keys(t).length>0?Object.keys(t).forEach(e=>{t[e].values&&this.setFilterElement(e,t[e].values)}):this.resetAllFilterElements()}setFilterElement(t,e){this.querySelectorAll("select, input[type=checkbox], input[type=radio], input[type=search]").forEach(s=>{s.name.toLowerCase()===t&&(s instanceof HTMLSelectElement&&(s.value=e[0]||"",this.toggleHighlight(s)),s instanceof HTMLInputElement&&(s.type==="checkbox"&&e.includes(s.value)&&(s.checked=!0),s.type==="radio"&&s.value===e[0]&&(s.checked=!0),s.type==="search"&&(s.value=e[0]||"",this.toggleHighlight(s))))})}}customElements.define("action-table-filters",A);
//# sourceMappingURL=action-table-filters.js.map
