var b=Object.defineProperty;var m=(u,c,e)=>c in u?b(u,c,{enumerable:!0,configurable:!0,writable:!0,value:e}):u[c]=e;var p=(u,c,e)=>(m(u,typeof c!="symbol"?c+"":c,e),e);class E extends HTMLElement{constructor(){super();p(this,"options",[])}findOptions(e){e=e.toLowerCase();const t=this.closest("action-table"),n=t.cols,s=t.tbody,a=n.indexOf(e);if(a===-1)return;const r=`td:nth-child(${a+1})`,h=s.querySelectorAll(r);let l=[];Array.from(h).forEach(i=>{if(i.dataset.filter)l.push(i.dataset.filter);else{const o=i.querySelectorAll("span, ul > li");if((o==null?void 0:o.length)>0){const d=Array.from(o).map(f=>f.innerText);l=l.concat(d)}else l.push(i.innerText)}}),l=Array.from(new Set(l)),this.options=l.sort((i,o)=>i.localeCompare(o,void 0,{numeric:!0}))}connectedCallback(){var t;const e=this.getAttribute("name");e&&(this.hasAttribute("options")?this.options=((t=this.getAttribute("options"))==null?void 0:t.split(","))||[]:this.findOptions(e),this.render(e))}render(e){if(this.options.length<1)return;const t=this.getAttribute("type")||"select",n=this.getAttribute("label")||e,s=this.hasAttribute("multiple")?"multiple":"";let a="",r="";const h=t==="select"?`<label for="filter-${e}">${n}</label>`:`<span class="filter-label">${n}</span>`;t==="select"&&(a=`<select id="filter-${e}" name="${e}" ${s}><option value="">All</option>`,r="</select>"),t==="radio"&&(a=`<label><input name="${e}" type="radio" value="" checked>All</label>`);const l=`${h}${a}${this.options.map(i=>t==="select"?`<option value="${i}">${i}</option>`:t==="radio"||t==="checkbox"?`<label><input type="${t}" name="${e}" value="${i}" />${i}</label>`:"").join("")}${r}`;this.innerHTML=`${l}`}}customElements.define("action-table-filter-menu",E);class v extends HTMLElement{constructor(){super(),this.render()}connectedCallback(){this.render()}render(){const c=this.getAttribute("name");if(!c)return;const e=this.getAttribute("label")||c,t=this.getAttribute("value")||"on",n=`<label>
        <input type="checkbox" name="${c.toLowerCase()}" value="${t}" />
        <span>${e}</span>
      </label>`;this.innerHTML=`${n}`}}customElements.define("action-table-filter-switch",v);class y extends HTMLElement{constructor(){super();p(this,"actionTable",this.closest("action-table"));this.addEventListeners()}connectedCallback(){const e=this.actionTable.filters;Object.keys(e).length>0&&this.setFilterElements(e)}toggleHighlight(e){e.value?e.classList.add("selected"):e.classList.remove("selected")}addEventListeners(){this.addEventListener("change",n=>{const s=n.target;if(s instanceof HTMLSelectElement||s instanceof HTMLInputElement){const a=s.hasAttribute("exclusive")||!!s.closest("[exclusive]"),r=s.hasAttribute("regex")||!!s.closest("[regex]"),h=s.name.toLowerCase();if(s instanceof HTMLSelectElement){this.toggleHighlight(s);const l=Array.from(s.selectedOptions).map(i=>i.value);this.dispatch({[h]:{values:l,exclusive:a,regex:r}})}if(s instanceof HTMLInputElement){if(s.type==="checkbox"){const l=this.querySelectorAll("input[type=checkbox][name="+s.name+"]"),i=Array.from(l).filter(o=>o.checked).map(o=>o.value);this.dispatch({[h]:{values:i,exclusive:a,regex:r}})}s.type==="radio"&&this.dispatch({[h]:{values:[s.value],exclusive:a,regex:r}})}}}),this.querySelectorAll("input[type='search']").forEach(n=>{function s(r,h=300){let l;return(...i)=>{clearTimeout(l),l=setTimeout(()=>{r(...i)},h)}}const a=n.dataset.event||"input";n.addEventListener(a,()=>{s(()=>this.dispatch({[n.name]:{values:[n.value]}}))(),this.dispatch({[n.name]:{values:[n.value]}})})});const t=this.querySelector("button[type=reset]");t==null||t.addEventListener("click",()=>{this.resetAllFilterElements(),this.dispatch()}),this.actionTable.addEventListener("action-table-filters-reset",()=>{this.resetAllFilterElements()})}dispatch(e){this.dispatchEvent(new CustomEvent("action-table-filter",{detail:e,bubbles:!0}))}resetAllFilterElements(){this.querySelectorAll("select, input[type=checkbox], input[type=radio], input[type=search]").forEach(t=>{t instanceof HTMLInputElement&&(t.type==="checkbox"||t.type==="radio")&&(t.value===""?t.checked=!0:t.checked=!1),(t instanceof HTMLSelectElement||t instanceof HTMLInputElement&&t.type==="search")&&(t.value="",this.toggleHighlight(t))})}setFilterElements(e){Object.keys(e).length>0?Object.keys(e).forEach(t=>{e[t].values&&this.setFilterElement(t,e[t].values)}):this.resetAllFilterElements()}setFilterElement(e,t){this.querySelectorAll("select, input[type=checkbox], input[type=radio], input[type=search]").forEach(s=>{s.name.toLowerCase()===e&&(s instanceof HTMLSelectElement&&(s.value=t[0]||"",this.toggleHighlight(s)),s instanceof HTMLInputElement&&(s.type==="checkbox"&&t.includes(s.value)&&(s.checked=!0),s.type==="radio"&&s.value===t[0]&&(s.checked=!0),s.type==="search"&&(s.value=t[0]||"",this.toggleHighlight(s))))})}}customElements.define("action-table-filters",y);
//# sourceMappingURL=action-table-filters.js.map
