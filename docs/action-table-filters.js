var p=Object.defineProperty;var f=(a,t,e)=>t in a?p(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var b=(a,t,e)=>(f(a,typeof t!="symbol"?t+"":t,e),e);class m extends HTMLElement{constructor(){super()}static get observedAttributes(){return["col","options","label","type","exclusive","multiple"]}get col(){return this.getAttribute("col")||""}get options(){return this.getAttribute("options")||""}set options(t){this.setAttribute("options",t)}get label(){return this.getAttribute("label")||this.col}get type(){return this.getAttribute("type")||"select"}get multiple(){return this.hasAttribute("multiple")?"multiple":""}findOptions(t){var h,o,c;t=t.toLowerCase();const e=(h=this.closest("action-table"))==null?void 0:h.querySelectorAll("table thead th"),i=Array.from(e).findIndex(l=>{var u;return((u=l.dataset.col)==null?void 0:u.toLowerCase())===t||l.innerText.toLowerCase()===t});if(i===-1)return;const n=(o=this.closest("action-table"))==null?void 0:o.querySelectorAll(`table tbody td:nth-child(${i+1})`),s=(c=this.closest("action-table"))==null?void 0:c.querySelectorAll(`table tbody td:nth-child(${i+1}) > *`);let r=[];s&&s.length>0?r=Array.from(s).map(l=>l.matches("[type='checkbox']")?l.value:l.innerText):r=Array.from(n).map(l=>l.dataset.filter||l.innerText),this.options=Array.from(new Set(r)).join(",")}connectedCallback(){this.options||this.findOptions(this.col),this.render()}render(){const t=this.col.toLowerCase(),e=this.type==="select"?`<label for="filter-${t}">${this.label}</label>`:`<span class="filter-label">${this.label}</span>`;let i="",n="";this.type==="select"&&(i=`<select id="filter-${t}" name="${t}" ${this.multiple}><option value="">All</option>`,n="</select>"),this.type==="radio"&&(i=`<label><input name="${t}" type="radio" value="">All</label>`);let s=`${e}${i}${this.options.split(",").map(r=>this.type==="select"?`<option value="${r}">${r}</option>`:this.type==="radio"||this.type==="checkbox"?`<label><input type="${this.type}" name="${t}" value="${r}" />${r}</label>`:"").join("")}${n}`;this.innerHTML=`${s}`}}customElements.define("action-table-filter-menu",m);class d extends HTMLElement{constructor(){super()}static get observedAttributes(){return["col","label","value"]}get col(){return this.getAttribute("col")||""}get label(){return this.getAttribute("label")||this.col}get value(){return this.getAttribute("value")||"on"}connectedCallback(){this.render()}render(){const t=`<label>
        <input type="checkbox" name="${this.col.toLowerCase()}" value="${this.value}" />
        <span>${this.label}</span>
      </label>`;this.innerHTML=`${t}`}}customElements.define("action-table-filter-switch",d);class y extends HTMLElement{constructor(){super();b(this,"filterElements")}connectedCallback(){this.init()}async init(){await this.checkForActionTableFilterElements(),this.filterElements=this.querySelectorAll("select, input[type=checkbox], input[type=radio]"),this.addEventListeners()}toggleHighlight(e){e.value?e.classList.add("selected"):e.classList.remove("selected")}addEventListeners(){const e=this.closest("action-table");this.addEventListener("change",n=>{const s=n.target;let r="";if(s.type==="checkbox"){const o=s,c=Array.from(this.filterElements).filter(l=>(l=l,l.type==="checkbox"&&l.name===o.name?l.checked:!1)).map(l=>l.value);c.length>0&&(r=c)}if(s.type==="radio"&&(r=s.value),s.tagName.toLowerCase()==="select"){const o=s;r=Array.from(o.selectedOptions).map(l=>l.value)}const h=!!s.closest("[exclusive]");e.filterTable(s.name,r,h),this.toggleHighlight(s)}),this.querySelector("button[type=reset]").addEventListener("click",()=>{this.resetAllFilterElements(),e.resetFilters()})}async checkForActionTableFilterElements(){const e=this.querySelectorAll("action-table-filter-menu, action-table-filter-switch");return e&&e.length>0?(await Promise.all([customElements.whenDefined("action-table-filter-menu"),customElements.whenDefined("action-table-filter-switch")]),!0):!1}resetAllFilterElements(){this.filterElements.forEach(e=>{if(e.type==="checkbox"||e.type==="radio"){const i=e;i.value===""?i.checked=!0:i.checked=!1}e.tagName.toLowerCase()==="select"&&(e.value="",this.toggleHighlight(e))})}async setFilterElements(e){await this.checkForActionTableFilterElements(),Object.keys(e).forEach(i=>{this.setFilterElement(i,e[i])})}setFilterElement(e,i){this.filterElements.forEach(n=>{if(n.name===e){if(n.type==="checkbox"&&Array.isArray(i)){const s=n;i.includes(s.value)&&(s.checked=!0)}if(n.type==="radio"&&typeof i=="string"){const s=n;s.value===i&&(s.checked=!0)}n.tagName.toLowerCase()==="select"&&typeof i=="string"&&(n.name===e&&(n.value=i),this.toggleHighlight(n))}})}}customElements.define("action-table-filters",y);
//# sourceMappingURL=action-table-filters.js.map
