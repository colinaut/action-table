{"version":3,"file":"action-table-filters.js","sources":["../src/action-table-filter-menu.ts","../src/action-table-filter-switch.ts","../src/action-table-filter-range.ts","../src/action-table-filters.ts"],"sourcesContent":["import type { ActionTable } from \"./action-table\";\nexport class ActionTableFilterMenu extends HTMLElement {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tprivate options: string[] = [];\n\n\tprivate findOptions(columnName: string): void {\n\t\t// 1. Set column name to lowercase\n\t\tcolumnName = columnName.toLowerCase();\n\n\t\t// 2. Get action table; of not found, return\n\t\tconst actionTable = this.closest(\"action-table\") as ActionTable;\n\n\t\t// 3. Get cols and tbody from actionTable\n\t\tconst cols = actionTable.cols;\n\t\tconst tbody = actionTable.tbody;\n\n\t\t// 4. Find column index based on column name in header data-col attribute; if not found, return\n\t\tconst columnIndex = cols.findIndex((col) => col.name === columnName);\n\t\tif (columnIndex === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\t// 6. Get all cells in column\n\t\tconst columnTDs = `td:nth-child(${columnIndex + 1})`;\n\t\tconst cells = tbody.querySelectorAll(columnTDs) as NodeListOf<HTMLTableCellElement>;\n\t\t// 7. Create array of options\n\t\tlet options: string[] = [];\n\n\t\t// 8. Review all cells for filter values\n\t\tArray.from(cells).forEach((cell) => {\n\t\t\tif (cell.dataset.filter) {\n\t\t\t\t// 8.1 If data-filter exists, add to options\n\t\t\t\toptions.push(cell.dataset.filter);\n\t\t\t} else {\n\t\t\t\t// 8.2 If data-filter does not exist, check for subitems\n\t\t\t\tconst subItems = cell.querySelectorAll(`span, ul > li`) as NodeListOf<HTMLElement>;\n\t\t\t\tif (subItems?.length > 0) {\n\t\t\t\t\t// 8.3 If subitems exist, get all options in subitems\n\t\t\t\t\tconst subOptions = Array.from(subItems).map((item) => item.innerText);\n\t\t\t\t\toptions = options.concat(subOptions);\n\t\t\t\t} else {\n\t\t\t\t\t// 8.4 If subitems do not exist, get innerText of cell\n\t\t\t\t\toptions.push(cell.innerText);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// 8. Make array of all unique options\n\t\toptions = Array.from(new Set(options));\n\n\t\tconst sortOrder = cols[columnIndex].order;\n\t\tfunction checkSortOrder(value: string) {\n\t\t\treturn sortOrder?.includes(value) ? sortOrder.indexOf(value).toString() : value;\n\t\t}\n\n\t\t// 9. Sort options using action table alpha numeric sort\n\t\toptions.sort((a, b) => {\n\t\t\ta = checkSortOrder(a);\n\t\t\tb = checkSortOrder(b);\n\t\t\treturn actionTable.alphaNumSort(a, b);\n\t\t});\n\t\t// 10. reverse order if descending\n\t\tif (this.hasAttribute(\"descending\")) options.reverse();\n\t\t// 11. Set options\n\t\tthis.options = options;\n\t}\n\n\t// Using connectedCallback because options may need to be rerendered when added to the DOM\n\tpublic connectedCallback(): void {\n\t\tconst columnName = this.getAttribute(\"name\");\n\t\t// name is required\n\t\tif (!columnName) return;\n\t\t// If options are not specified then find them\n\t\tif (this.hasAttribute(\"options\")) {\n\t\t\tthis.options = this.getAttribute(\"options\")?.split(\",\") || [];\n\t\t} else {\n\t\t\tthis.findOptions(columnName);\n\t\t}\n\t\tthis.render(columnName);\n\t}\n\n\tprivate render(columnName: string): void {\n\t\tif (this.options.length < 1) return;\n\t\t// Get options from custom element attributes\n\t\tconst type = (this.getAttribute(\"type\") as \"select\" | \"checkbox\" | \"radio\") || \"select\";\n\t\tconst label = this.getAttribute(\"label\") || columnName;\n\t\tconst multiple = this.hasAttribute(\"multiple\") ? \"multiple\" : \"\";\n\t\tconst all = this.getAttribute(\"all\") || \"All\";\n\n\t\t// Build element\n\t\tlet start = \"\";\n\t\tlet end = \"\";\n\t\tconst mainLabel = type === \"select\" ? `<label for=\"filter-${columnName}\">${label}</label>` : `<span class=\"filter-label\">${label}</span>`;\n\t\t// is this is a select menu then add start and end wrapper and an All option\n\t\tif (type === \"select\") {\n\t\t\tstart = `<select id=\"filter-${columnName}\" name=\"${columnName}\" ${multiple}><option value=\"\">${all}</option>`;\n\t\t\tend = `</select>`;\n\t\t}\n\t\t// If this is a radio button then add an all option\n\t\tif (type === \"radio\") {\n\t\t\tstart = `<label><input name=\"${columnName}\" type=\"radio\" value=\"\" checked>${all}</label>`;\n\t\t}\n\t\t// add select options, radio buttons, or checkboxes from options\n\t\tconst html = `${mainLabel}${start}${this.options\n\t\t\t.map((option) => {\n\t\t\t\tif (type === \"select\") return `<option value=\"${option}\">${option}</option>`;\n\t\t\t\tif (type === \"radio\" || type === \"checkbox\") return `<label><input type=\"${type}\" name=\"${columnName}\" value=\"${option}\" />${option}</label>`;\n\t\t\t\treturn \"\";\n\t\t\t})\n\t\t\t.join(\"\")}${end}`;\n\n\t\t// Add to inner HTML\n\t\tthis.innerHTML = `${html}`;\n\t}\n}\n\ncustomElements.define(\"action-table-filter-menu\", ActionTableFilterMenu);\n","export class ActionTableFilterSwitch extends HTMLElement {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.render();\n\t}\n\n\tpublic connectedCallback(): void {\n\t\tthis.render();\n\t}\n\n\tprivate render(): void {\n\t\tconst name = this.getAttribute(\"name\");\n\t\tif (!name) {\n\t\t\treturn;\n\t\t}\n\t\tconst label = this.getAttribute(\"label\") || name;\n\t\tconst value = this.getAttribute(\"value\") || \"on\";\n\t\tconst html = `<label>\n        <input type=\"checkbox\" name=\"${name.toLowerCase()}\" value=\"${value}\" />\n        <span>${label}</span>\n      </label>`;\n\n\t\tthis.innerHTML = `${html}`;\n\t}\n}\n\ncustomElements.define(\"action-table-filter-switch\", ActionTableFilterSwitch);\n","import type { ActionCell } from \"./types\";\nimport type { ActionTable } from \"./action-table\";\nexport class ActionTableFilterRange extends HTMLElement {\n\t// private shadow: ShadowRoot;\n\tconstructor() {\n\t\tsuper();\n\t\t// this.shadow = this.attachShadow({ mode: \"open\" });\n\t\tthis.render();\n\t\tthis.addEventListeners();\n\t}\n\n\tget name() {\n\t\treturn this.getAttribute(\"name\") || \"\";\n\t}\n\n\tprivate min = 0;\n\tprivate rangeTotal = 0;\n\n\taddEventListeners() {\n\t\tthis.addEventListener(\"input\", (e) => {\n\t\t\tconst inputs = this.querySelectorAll(\"input\");\n\t\t\tconst output = this.querySelector(\"output\");\n\t\t\tconst [min, max] = Array.from(inputs).map((input) => Number(input.value));\n\t\t\tconst minStr = min.toString();\n\t\t\tconst maxStr = max.toString();\n\t\t\t// set content of outputs\n\t\t\tif (output instanceof HTMLOutputElement) {\n\t\t\t\toutput.textContent = `${minStr}-${maxStr}`;\n\t\t\t}\n\t\t\t// set side margin of color\n\t\t\tconst rangeColor = this.querySelector(\".range-slider-highlight\");\n\t\t\tif (rangeColor instanceof HTMLSpanElement) {\n\t\t\t\t// margin left is percentage of range based on total range distance of current value and min\n\t\t\t\trangeColor.style.marginLeft = `${((min - this.min) / this.rangeTotal) * 100}%`;\n\t\t\t\trangeColor.style.width = `${((max - min) / this.rangeTotal) * 100}%`;\n\t\t\t}\n\t\t\t// reset input values if goes out of range\n\t\t\tif (min > max) {\n\t\t\t\t// stop propagation so that it doesn't trigger the action-table-filter event\n\t\t\t\te.stopPropagation();\n\t\t\t\tinputs[0].value = maxStr;\n\t\t\t\tinputs[1].value = minStr;\n\t\t\t}\n\t\t});\n\t}\n\n\tfindMinMax(): number[] {\n\t\tconst min = this.getAttribute(\"min\");\n\t\tconst max = this.getAttribute(\"max\");\n\t\tif (min && max) {\n\t\t\treturn [Number(min), Number(max)];\n\t\t}\n\t\tconst actionTable = this.closest(\"action-table\") as ActionTable;\n\t\t// 3. Get cols and tbody from actionTable\n\t\tconst cols = actionTable.cols;\n\t\tconst tbody = actionTable.tbody;\n\n\t\t// 4. Find column index based on column name in header data-col attribute; if not found, return\n\t\tconst columnIndex = cols.findIndex((col) => col.name === this.name.toLowerCase());\n\t\tif (columnIndex === -1) {\n\t\t\treturn [0, 0];\n\t\t}\n\n\t\t// 6. Get all cells in column\n\t\tconst columnTDs = `td:nth-child(${columnIndex + 1})`;\n\t\tconst cells = tbody.querySelectorAll(columnTDs) as NodeListOf<ActionCell>;\n\n\t\treturn Array.from(cells).reduce((total: number[], current) => {\n\t\t\tconst num = Number(current.actionTable.filter);\n\t\t\tlet min = total.length === 2 ? total[0] : num;\n\t\t\tlet max = total.length === 2 ? total[1] : num;\n\t\t\tmin = min < num ? min : num;\n\t\t\tmax = max > num ? max : num;\n\t\t\treturn [min, max];\n\t\t}, []);\n\t}\n\n\trender() {\n\t\tconst [min, max] = this.findMinMax();\n\n\t\tconst minStr = min.toString();\n\t\tconst maxStr = max.toString();\n\t\tthis.rangeTotal = max - min;\n\t\tthis.min = min;\n\t\tconst label = this.getAttribute(\"label\") || this.name;\n\t\tconst labelDiv = document.createElement(\"div\");\n\t\tlabelDiv.textContent = label;\n\t\tconst group = document.createElement(\"div\");\n\t\tgroup.classList.add(\"range-slider-group\");\n\n\t\t// TODO: make this variable so number of steps can be adjusted with attribute?\n\t\t// Each step is rounded to the nearest power of ten ( 10, 100, 1000, etc. )\n\t\tconst step = Math.pow(10, Math.round(Math.log10(this.rangeTotal))) / 10;\n\n\t\t// Helper function\n\t\tfunction setAttributes(element: Element, attributes: Record<string, string>) {\n\t\t\tfor (const key in attributes) {\n\t\t\t\telement.setAttribute(key, attributes[key]);\n\t\t\t}\n\t\t}\n\n\t\t// make array of values starting with the min and ending with the max with the steps in between\n\t\tconst values = [min];\n\t\tfor (let i = min + step; i <= max; i += step) {\n\t\t\tvalues.push(Math.round(i / step) * step);\n\t\t}\n\t\tif (!values.includes(max)) values.push(max);\n\n\t\t// Add svg ticks\n\t\tconst svgTicks = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\t\tsetAttributes(svgTicks, {\n\t\t\trole: \"presentation\",\n\t\t\twidth: \"100%\",\n\t\t\theight: \"5\",\n\t\t});\n\t\tconst gaps = 100 / (values.length - 1);\n\n\t\tfor (let i = 1; i < values.length - 1; i++) {\n\t\t\tconst line = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\n\t\t\tconst gap = `${i * gaps}%`;\n\t\t\tsetAttributes(line, {\n\t\t\t\tx1: gap,\n\t\t\t\tx2: gap,\n\t\t\t\ty1: \"0\",\n\t\t\t\ty2: \"5\",\n\t\t\t\tstroke: \"currentColor\",\n\t\t\t\t\"stroke-width\": \"1\",\n\t\t\t});\n\t\t\tsvgTicks.append(line);\n\t\t}\n\n\t\tconst slideHighlight = document.createElement(\"span\");\n\t\tslideHighlight.classList.add(\"range-slider-highlight\");\n\t\tgroup.append(svgTicks, slideHighlight);\n\n\t\t// Add input ranges\n\t\tfor (let i = 0; i <= 1; i++) {\n\t\t\tconst input = document.createElement(\"input\");\n\t\t\tsetAttributes(input, {\n\t\t\t\ttype: \"range\",\n\t\t\t\tname: this.name,\n\t\t\t\tmin: minStr,\n\t\t\t\tmax: maxStr,\n\t\t\t\t\"data-range\": i === 0 ? \"min\" : \"max\",\n\t\t\t\t\"aria-label\": i === 0 ? \"Min\" : \"Max\",\n\t\t\t\tvalue: i === 0 ? minStr : maxStr,\n\t\t\t});\n\t\t\tgroup.append(input);\n\t\t}\n\n\t\t// add output\n\t\tconst output = document.createElement(\"output\");\n\t\toutput.innerHTML = `${min}&ndash;${max}`;\n\t\tthis.append(labelDiv, group, output);\n\t}\n}\n\ncustomElements.define(\"action-table-filter-range\", ActionTableFilterRange);\n","import type { ActionTable } from \"./action-table\";\nimport { FiltersObject } from \"./types\";\n\nexport class ActionTableFilters extends HTMLElement {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.addEventListeners();\n\t}\n\n\tprivate actionTable = this.closest(\"action-table\") as ActionTable;\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                             Connected Callback                             */\n\t/* -------------------------------------------------------------------------- */\n\tpublic connectedCallback(): void {\n\t\t// Grab current filters from action-table\n\t\tconst filters: FiltersObject = this.actionTable.filters;\n\n\t\t// 4.1 If filters are not empty, set the select/checkbox/radio elements\n\t\tif (Object.keys(filters).length > 0) {\n\t\t\tthis.setFilterElements(filters);\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*              Private Method: toggle highlight for select menu              */\n\t/* -------------------------------------------------------------------------- */\n\n\tprivate toggleHighlight(el: HTMLInputElement | HTMLSelectElement): void {\n\t\tif (el.value) {\n\t\t\tel.classList.add(\"selected\");\n\t\t} else {\n\t\t\tel.classList.remove(\"selected\");\n\t\t}\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                        Private: add event listeners                        */\n\t/* -------------------------------------------------------------------------- */\n\n\tprivate addEventListeners(): void {\n\t\t/* ------------ Event Listeners for select/checkbox/radio ------------ */\n\t\tthis.addEventListener(\"input\", (e) => {\n\t\t\tconst el = e.target;\n\t\t\tif (el instanceof HTMLSelectElement || el instanceof HTMLInputElement) {\n\t\t\t\tconst exclusive = el.hasAttribute(\"exclusive\") || !!el.closest(\"[exclusive]\");\n\t\t\t\tconst regex = el.hasAttribute(\"regex\") || !!el.closest(\"[regex]\");\n\t\t\t\tconst exact = el.hasAttribute(\"exact\") || !!el.closest(\"[exact]\");\n\t\t\t\tconst columnName = el.name.toLowerCase();\n\t\t\t\tif (el instanceof HTMLSelectElement) {\n\t\t\t\t\tthis.toggleHighlight(el);\n\t\t\t\t\tconst selectedOptions = Array.from(el.selectedOptions).map((option) => option.value);\n\t\t\t\t\tthis.dispatch({ [columnName]: { values: selectedOptions, exclusive, regex, exact } });\n\t\t\t\t}\n\t\t\t\tif (el instanceof HTMLInputElement) {\n\t\t\t\t\tif (el.type === \"checkbox\") {\n\t\t\t\t\t\t// Casting to HTMLInputElement because we know it's a checkbox from selector\n\t\t\t\t\t\tconst checkboxes = this.querySelectorAll(\"input[type=checkbox][name=\" + el.name + \"]\") as NodeListOf<HTMLInputElement>;\n\t\t\t\t\t\tconst checkboxValues = Array.from(checkboxes)\n\t\t\t\t\t\t\t.filter((e) => {\n\t\t\t\t\t\t\t\treturn e.checked;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.map((checkbox) => checkbox.value);\n\t\t\t\t\t\tthis.dispatch({ [columnName]: { values: checkboxValues, exclusive, regex, exact } });\n\t\t\t\t\t}\n\t\t\t\t\tif (el.type === \"radio\") {\n\t\t\t\t\t\tthis.dispatch({ [columnName]: { values: [el.value], exclusive, regex, exact } });\n\t\t\t\t\t}\n\t\t\t\t\tif (el.type === \"range\") {\n\t\t\t\t\t\tconst sliders = this.querySelectorAll(\"input[type=range][name='\" + el.name + \"']\") as NodeListOf<HTMLInputElement>;\n\t\t\t\t\t\tconst minMax: string[] = [];\n\t\t\t\t\t\tsliders.forEach((slider) => {\n\t\t\t\t\t\t\tif (slider.dataset.range === \"min\") minMax[0] = slider.value;\n\t\t\t\t\t\t\tif (slider.dataset.range === \"max\") minMax[1] = slider.value;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.dispatch({ [columnName]: { values: minMax, range: true } });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst searchInputs = this.querySelectorAll(\"input[type='search']\") as NodeListOf<HTMLInputElement>;\n\n\t\tsearchInputs.forEach((el) => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\tfunction debounce<T extends (...args: any[]) => any>(func: T, timeout = 300) {\n\t\t\t\tlet timer: ReturnType<typeof setTimeout>;\n\t\t\t\treturn (...args: Parameters<T>) => {\n\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\ttimer = setTimeout(() => {\n\t\t\t\t\t\tfunc(...args);\n\t\t\t\t\t}, timeout);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst event = el.dataset.event || \"input\";\n\t\t\tel.addEventListener(event, () => {\n\t\t\t\tthis.toggleHighlight(el);\n\t\t\t\tconst debouncedFilter = debounce(() => this.dispatch({ [el.name]: { values: [el.value] } }));\n\t\t\t\tdebouncedFilter();\n\t\t\t});\n\t\t});\n\n\t\t/* ------------------------------- Text Input ------------------------------- */\n\n\t\t/* ------------------------------ Reset Button ------------------------------ */\n\t\tconst resetButton = this.querySelector(\"button[type=reset]\");\n\t\tresetButton?.addEventListener(\"click\", () => {\n\t\t\tthis.resetAllFilterElements();\n\t\t\tthis.dispatch();\n\t\t});\n\n\t\t/* ----------------- Reset Event Filters from action-table ----------------- */\n\t\t// This is fired when the reset button is clicked in the tfoot section\n\t\tthis.actionTable.addEventListener(\"action-table-filters-reset\", () => {\n\t\t\tthis.resetAllFilterElements();\n\t\t});\n\t}\n\n\tprivate dispatchInput(el: HTMLInputElement) {\n\t\tel.dispatchEvent(\n\t\t\tnew Event(\"input\", {\n\t\t\t\tbubbles: true,\n\t\t\t})\n\t\t);\n\t}\n\n\tprivate dispatch(detail?: FiltersObject) {\n\t\t// return no detail to reset filters on table\n\t\tconsole.log(\"dispatch\", detail);\n\t\tthis.dispatchEvent(\n\t\t\tnew CustomEvent<FiltersObject>(\"action-table-filter\", {\n\t\t\t\tdetail,\n\t\t\t\tbubbles: true,\n\t\t\t})\n\t\t);\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                  Public Method: reset all filter elements                  */\n\t/* -------------------------------------------------------------------------- */\n\n\tpublic resetAllFilterElements() {\n\t\tconsole.log(\"resetAllFilterElements\");\n\t\t// Casting to types as we know what it is from selector\n\t\tconst filterElements = this.querySelectorAll(\"select, input\") as NodeListOf<HTMLSelectElement | HTMLInputElement>;\n\n\t\tfilterElements.forEach((el) => {\n\t\t\tif (el instanceof HTMLInputElement && (el.type === \"checkbox\" || el.type === \"radio\")) {\n\t\t\t\tif (el.value === \"\") {\n\t\t\t\t\tel.checked = true;\n\t\t\t\t} else {\n\t\t\t\t\tel.checked = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (el instanceof HTMLSelectElement || (el instanceof HTMLInputElement && el.type === \"search\")) {\n\t\t\t\tel.value = \"\";\n\t\t\t\tthis.toggleHighlight(el);\n\t\t\t}\n\t\t\tif (el instanceof HTMLInputElement && el.type === \"range\") {\n\t\t\t\tel.value = el.dataset.range === \"max\" ? el.max : el.min;\n\t\t\t\t// dispatch input event to trigger change for range slider\n\t\t\t\tthis.dispatchInput(el);\n\t\t\t}\n\t\t});\n\t}\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                  Public Method: set filter elements                        */\n\t/* -------------------------------------------------------------------------- */\n\t/* ------------------ If no args are passed then it resets ------------------ */\n\n\tpublic setFilterElements(filters: FiltersObject) {\n\t\tconsole.log(\"action-table-filters.setFilterElements\", filters);\n\t\t// 1. if there are filters then set the filters on all the elements\n\t\tif (Object.keys(filters).length > 0) {\n\t\t\tObject.keys(filters).forEach((key) => {\n\t\t\t\tif (!filters[key].values) return;\n\t\t\t\tthis.setFilterElement(key, filters[key].values);\n\t\t\t});\n\t\t} else {\n\t\t\t// else reset all filters\n\t\t\tthis.resetAllFilterElements();\n\t\t}\n\t}\n\n\t/* --------------------------- Set Filter element --------------------------- */\n\n\tpublic setFilterElement(columnName: string, values: string[]) {\n\t\t// Casting to types as we know what it is from selector\n\n\t\tconst filterElements = this.querySelectorAll(\"select, input\") as NodeListOf<HTMLSelectElement | HTMLInputElement>;\n\n\t\tfilterElements.forEach((el) => {\n\t\t\tif (el.name.toLowerCase() !== columnName || values.length === 0) return;\n\n\t\t\tif (el instanceof HTMLSelectElement) {\n\t\t\t\tel.value = values[0];\n\t\t\t\tthis.toggleHighlight(el);\n\t\t\t}\n\t\t\tif (el instanceof HTMLInputElement) {\n\t\t\t\tif (el.type === \"checkbox\") {\n\t\t\t\t\tif (values.includes(el.value)) {\n\t\t\t\t\t\tel.checked = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (el.type === \"radio\") {\n\t\t\t\t\tif (el.value === values[0]) {\n\t\t\t\t\t\tel.checked = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (el.type === \"search\") {\n\t\t\t\t\tel.value = values[0];\n\t\t\t\t\tthis.toggleHighlight(el);\n\t\t\t\t}\n\t\t\t\tif (el.type === \"range\") {\n\t\t\t\t\tif (el.dataset.range === \"min\") {\n\t\t\t\t\t\tel.value = values[0] || el.min;\n\t\t\t\t\t\t// trigger input event so range slider updates\n\t\t\t\t\t\tthis.dispatchInput(el);\n\t\t\t\t\t}\n\t\t\t\t\tif (el.dataset.range === \"max\") {\n\t\t\t\t\t\tel.value = values[1] || el.max;\n\t\t\t\t\t\t// trigger input event so range slider updates\n\t\t\t\t\t\tthis.dispatchInput(el);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\ncustomElements.define(\"action-table-filters\", ActionTableFilters);\n\n// Import filter components\nimport \"./action-table-filter-menu\";\nimport \"./action-table-filter-switch\";\nimport \"./action-table-filter-range\";\n"],"names":["ActionTableFilterMenu","__publicField","columnName","actionTable","cols","tbody","columnIndex","col","columnTDs","cells","options","cell","subItems","subOptions","item","sortOrder","checkSortOrder","value","a","b","_a","type","label","multiple","all","start","end","mainLabel","html","option","ActionTableFilterSwitch","name","ActionTableFilterRange","e","inputs","output","min","max","input","minStr","maxStr","rangeColor","total","current","num","labelDiv","group","step","setAttributes","element","attributes","key","values","i","svgTicks","gaps","line","gap","slideHighlight","ActionTableFilters","filters","el","exclusive","regex","exact","selectedOptions","checkboxes","checkboxValues","checkbox","sliders","minMax","slider","debounce","func","timeout","timer","args","event","resetButton","detail"],"mappings":"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"}